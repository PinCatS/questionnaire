{"version":3,"sources":["./src/app/answers/answers.actions.ts","./src/environments/environment.ts","./src/app/progress-bar/progress-bar.component.ts","./src/app/progress-bar/progress-bar.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/outro/outro.component.ts","./src/app/outro/outro.component.html","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/questionnaire/questionnaire.component.ts","./src/app/questionnaire/questionnaire.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/question/question.component.html","./src/app/question/question.component.ts","./src/app/app.data.ts","./src/app/app.module.ts","./src/app/app.store.ts","./src/app/question.model.ts","./src/app/app-routing.module.ts","./src/app/answers/answers.reducer.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Action, ActionCreator } from 'redux';\n\nexport interface AddAnswerAction extends Action {\n  answer: string;\n  questionId: number;\n}\n\nexport const ADD_ANSWER: string = 'ADD_ANSWER';\nexport const addAnswer: ActionCreator<AddAnswerAction> = (\n  questionId,\n  answer\n) => ({\n  type: ADD_ANSWER,\n  questionId,\n  answer,\n});\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input, Inject } from '@angular/core';\n\n@Component({\n  selector: 'progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css'],\n})\nexport class ProgressBarComponent implements OnInit {\n  @Input() count!: number;\n\n  constructor(\n    @Inject('NUMBER_OF_QUESTIONS') public numberOfQuestions: number\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<p>{{ count }} out of {{ numberOfQuestions }}</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css'],\n})\nexport class WelcomeComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  startQuest() {\n    this.router.navigateByUrl('/questions');\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"quest\">\n  <button class=\"button quest__button\" (click)=\"startQuest()\">Начать</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-outro',\n  templateUrl: './outro.component.html',\n  styleUrls: ['./outro.component.css'],\n})\nexport class OutroComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  showResults() {\n    this.router.navigateByUrl('/results');\n  }\n\n  ngOnInit(): void {}\n}\n","<p>Спасибо Вам</p>\n<button (click)=\"showResults()\">Результаты</button>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from 'redux';\nimport { AppStore } from '../app.store';\nimport { AppState } from '../app.state';\nimport * as AnswersActions from '../answers/answers.actions';\nimport { QUESTIONS } from '../app.data';\nimport { Question } from '../question.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css'],\n})\nexport class ResultsComponent implements OnInit {\n  answers: any;\n\n  constructor(\n    @Inject(QUESTIONS) public questions: Question[],\n    @Inject(AppStore) private store: Store<AppState>\n  ) {\n    this.answers = this.getAnswers();\n  }\n\n  getAnswers(): Object {\n    const state: AppState = this.store.getState() as AppState;\n    console.log(state.answers);\n    return state.answers;\n  }\n\n  getAnswer(id: number): string {\n    return this.answers[id];\n  }\n\n  ngOnInit(): void {}\n}\n","<ul>\n  <li *ngFor=\"let question of questions\">\n    {{ question.getTitle() }}\n    Answers: {{ getAnswer(question.id) }}\n  </li>\n</ul>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from 'redux';\nimport { AppStore } from '../app.store';\nimport { AppState } from '../app.state';\nimport * as AnswersActions from '../answers/answers.actions';\nimport { QUESTIONS } from '../app.data';\nimport { Question } from '../question.model';\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.css'],\n})\nexport class QuestionnaireComponent implements OnInit {\n  private currentQuestionIdx: number;\n  public question: Question;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    @Inject(QUESTIONS) private questions: Question[],\n    @Inject(AppStore) private store: Store<AppState>\n  ) {\n    this.currentQuestionIdx = 0;\n    this.question = this.questions[this.currentQuestionIdx];\n  }\n\n  readState() {\n    const state: AppState = this.store.getState() as AppState;\n  }\n\n  onSubmit(value: any) {\n    const answer =\n      this.question.answerType == 'options'\n        ? this.convertAnswerToString(value)\n        : value['choice'];\n\n    this.store.dispatch(AnswersActions.addAnswer(this.question.id, answer));\n\n    this.nextQuestion();\n  }\n\n  private convertAnswerToString(value: any): string {\n    let answers = [];\n    for (let [option, isSelected] of Object.entries(value)) {\n      if (isSelected) answers.push(option);\n    }\n\n    return answers.join();\n  }\n\n  private nextQuestion() {\n    if (this.currentQuestionIdx < this.questions.length - 1) {\n      this.currentQuestionIdx++;\n      this.question = this.questions[this.currentQuestionIdx];\n    } else {\n      this.router.navigateByUrl(`/outro`);\n    }\n  }\n\n  isEnd(): boolean {\n    return this.currentQuestionIdx >= this.questions.length;\n  }\n\n  ngOnInit(): void {\n    this.store.subscribe(() => this.readState());\n    this.readState();\n  }\n}\n","<div class=\"questionnaire\">\n  <progress-bar [count]=\"question.id\"></progress-bar>\n  <div [hidden]=\"isEnd()\">\n    <form\n      #f=\"ngForm\"\n      (ngSubmit)=\"onSubmit(f.value)\"\n      [ngSwitch]=\"question.answerType\"\n    >\n      <h2 class=\"form__heading\">{{ question.getTitle() }}</h2>\n      <fieldset *ngSwitchCase=\"'bool'\">\n        <input type=\"radio\" name=\"choice\" id=\"yes\" value=\"Да\" ngModel />\n        <label for=\"yes\">Да</label>\n        <input type=\"radio\" name=\"choice\" id=\"no\" value=\"Нет\" ngModel />\n        <label for=\"no\">Нет</label>\n      </fieldset>\n      <fieldset *ngSwitchCase=\"'choice'\">\n        <div *ngFor=\"let answer of question.answers; let idx = index\">\n          <input type=\"radio\" name=\"choice\" id=\"idx\" [value]=\"answer\" ngModel />\n          <label for=\"idx\">{{ answer }}</label>\n        </div>\n      </fieldset>\n      <fieldset *ngSwitchCase=\"'options'\">\n        <div *ngFor=\"let answer of question.answers; let idx = index\">\n          <input\n            type=\"checkbox\"\n            [name]=\"answer\"\n            id=\"idx\"\n            [value]=\"answer\"\n            ngModel\n          />\n          <label for=\"idx\">{{ answer }}</label>\n        </div>\n      </fieldset>\n      <fieldset *ngSwitchDefault>Answer is something else</fieldset>\n      <button type=\"submit\">Дальше</button>\n    </form>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Финансовый опросник';\n}\n","<div class=\"app\">\n  <h1 class=\"app__header\">Финансовый опросник</h1>\n  <router-outlet></router-outlet>\n</div>\n","<form class=\"form\" [ngSwitch]=\"question.answerType\">\n  <h2 class=\"form__heading\">{{ question.getTitle() }}</h2>\n  <fieldset *ngSwitchCase=\"'bool'\">\n    <input type=\"radio\" name=\"choice\" id=\"yes\" value=\"Да\" />\n    <label for=\"yes\">Да</label>\n    <input type=\"radio\" name=\"choice\" id=\"no\" value=\"Нет\" />\n    <label for=\"no\">Нет</label>\n  </fieldset>\n  <fieldset *ngSwitchCase=\"'choice'\">\n    <div *ngFor=\"let answer of question.answers; let idx = index\">\n      <input type=\"radio\" name=\"choice\" id=\"idx\" value=\"answer\" />\n      <label for=\"idx\">{{ answer }}</label>\n    </div>\n  </fieldset>\n  <fieldset *ngSwitchCase=\"'options'\">\n    <div *ngFor=\"let answer of question.answers; let idx = index\">\n      <input type=\"checkbox\" name=\"choice\" id=\"idx\" value=\"answer\" />\n      <label for=\"idx\">{{ answer }}</label>\n    </div>\n  </fieldset>\n  <fieldset *ngSwitchDefault>Answer is something else</fieldset>\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Question } from '../question.model';\n\n@Component({\n  selector: 'question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css'],\n})\nexport class QuestionComponent implements OnInit {\n  @Input() question!: Question;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","export const QUESTIONS = [\n  {\n    id: 1,\n    question: 'Есть ли у вас резервный фонд?',\n    answer: {\n      type: 'bool',\n      options: null,\n    },\n  },\n  {\n    id: 2,\n    question:\n      'Примерно через сколько лет вы планируете начать жить на пассивный доход?',\n    answer: {\n      type: 'choice',\n      options: [\n        'Через 4-6 лет',\n        'Через 7-10 лет',\n        'Через 11-16 лет',\n        'Более чем через 16 лет',\n      ],\n    },\n  },\n  {\n    id: 3,\n    question: 'Какими инвестиционными инструментами вы пользуетесь?',\n    answer: {\n      type: 'options',\n      options: ['Акции', 'Облигации', 'ETF', 'Недвижимость'],\n    },\n  },\n];\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\nimport { OutroComponent } from './outro/outro.component';\nimport { QuestionComponent } from './question/question.component';\nimport { ResultsComponent } from './results/results.component';\n\nimport { QUESTIONS } from './app.data';\nimport { Question } from './question.model';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\n\nimport { appStoreProviders } from './app.store';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    QuestionnaireComponent,\n    OutroComponent,\n    QuestionComponent,\n    ResultsComponent,\n    ProgressBarComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [\n    {\n      provide: QUESTIONS,\n\n      useFactory() {\n        return QUESTIONS.map((item) => {\n          return new Question(\n            item.id,\n            item.question,\n            item.answer.type,\n            item.answer.options\n          );\n        });\n      },\n    },\n    { provide: 'NUMBER_OF_QUESTIONS', useValue: QUESTIONS.length },\n    appStoreProviders,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Store, createStore } from 'redux';\nimport { AppState } from './app.state';\nimport { answersReducer as reducer } from './answers/answers.reducer';\n\nexport const AppStore = new InjectionToken('App.store');\n\nexport function createAppStore(): Store<AppState> {\n  return createStore(reducer);\n}\n\nexport const appStoreProviders = [\n  { provide: AppStore, useFactory: createAppStore },\n];\n","export class Question {\n  id: number;\n  question: string;\n  answerType: string;\n  answers: string[] | null;\n\n  constructor(\n    id: number,\n    question: string,\n    answerType: string,\n    answers: string[] | null\n  ) {\n    this.id = id;\n    this.question = question;\n    this.answerType = answerType;\n    this.answers = answers;\n  }\n\n  getTitle(): string {\n    return `${this.id}. ${this.question}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\nimport { OutroComponent } from './outro/outro.component';\nimport { ResultsComponent } from './results/results.component';\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent },\n  { path: 'questions', component: QuestionnaireComponent },\n  { path: 'outro', component: OutroComponent },\n  { path: 'results', component: ResultsComponent },\n  { path: '**', redirectTo: '/', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Reducer, Action } from 'redux';\nimport { AppState } from '../app.state';\nimport * as AnswersActions from './answers.actions';\n\nconst initialState: AppState = { answers: {} };\n\nexport const answersReducer: Reducer<AppState> = (\n  state: AppState = initialState,\n  action: Action\n): AppState => {\n  switch (action.type) {\n    case AnswersActions.ADD_ANSWER:\n      const answer: string = (<AnswersActions.AddAnswerAction>action).answer;\n      const questionId: number = (<AnswersActions.AddAnswerAction>action)\n        .questionId;\n      return Object.assign({}, state, {\n        answers: { ...state.answers, [questionId]: answer },\n      });\n    default:\n      return state;\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}